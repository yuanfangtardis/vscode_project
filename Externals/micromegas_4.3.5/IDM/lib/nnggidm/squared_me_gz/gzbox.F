#if 0
* box.F
* form factors for {S[6], S[6]} -> {V[1], V[2]}
* generated by FormCalc 8.0 on 19-Apr-2016 22:32
#endif

#include "vars.h"


	subroutine gzbox
	implicit none

#include "vars.h"

	ComplexType tmp1, tmp2

#include "inline.h"

        tmp1 = Pair4*(-(1/2.D0*(la2*AAABR(18)*pave11(cc00))) + 
     &       5/8.D0*(AAABR(10)*AAABR(52)*pave18(cc00))) + 
     &    1/4.D0*(AAABR(13)**2*AAABR(18)*
     &       (Abb105*(pave43(dd1) + pave43(dd12) + pave44(dd1) + 
     &            pave44(dd12)) + 
     &         Abb102*(-pave41(dd23) - pave42(dd23) - 
     &            pave43(dd23) - pave43(dd3) - pave44(dd23) - 
     &            pave44(dd3)) + 
     &         Abb109*(pave45(dd1) + pave45(dd12) + pave46(dd1) + 
     &            pave46(dd12)) + 
     &         Pair1*Pair7*
     &          (pave43(dd13) + pave44(dd13) + pave45(dd13) + 
     &            pave46(dd13)) + 
     &         Pair3*Pair6*
     &          (pave41(dd2) + pave41(dd22) + pave42(dd2) + 
     &            pave42(dd22) + pave43(dd0) + pave43(dd13) + 
     &            pave43(dd22) + pave44(dd0) + pave44(dd13) + 
     &            pave44(dd22) + pave45(dd13) + pave46(dd13)) + 
     &         Abb98*(-pave45(dd23) - pave45(dd3) - pave46(dd23) - 
     &            pave46(dd3)))) + 
     &    Pair7*(-(1/16.D0*(Sub62*AAABR(19)*pave41(dd33))) + 
     &       AAABR(13)**2*AAABR(18)*
     &        (Pair1*(1/2.D0*(pave45(dd2) + pave46(dd2)) + 
     &             1/4.D0*(pave45(dd0) + pave45(dd22) + 
     &                pave46(dd0) + pave46(dd22))) - 
     &          1/4.D0*(Pair3*
     &             (pave41(dd3) + pave41(dd33) + pave42(dd3) + 
     &               pave42(dd33) + pave43(dd33) + pave44(dd33) + 
     &               pave45(dd33) + pave46(dd33))))) + 
     &    1/16.D0*(AAABR(19)*
     &        (AAABR(53)*(Pair3*Pair7*
     &              (pave23(cc2) - pave23(cc22)) + 
     &             (-(MHX2*Pair4) + 2*Pair2*Pair7)*pave24(cc2) + 
     &             Pair1*Pair6*pave28(cc2) + 
     &             (-(MHX2*Pair4) + 2*Pair2*Pair6)*pave29(cc2)) - 
     &          Sub56*pave41(dd00)) + 
     &       AAABR(19)**2*(AAABR(10)*
     &           (Abb156*pave41(dd001) + Abb202*pave41(dd002)) + 
     &          AAABR(18)*(Abb158*pave48(dd113) + 
     &             Abb116*(pave48(dd112) + pave48(dd122))))) + 
     &    Pair6*(-(1/16.D0*(Sub60*AAABR(19)*pave41(dd22))) + 
     &       1/32.D0*(-(Abb57*AAABR(10)*AAABR(19)**2*
     &             pave43(dd112)) - 
     &          Abb88*AAABR(18)*AAABR(19)**2*pave47(dd223)) + 
     &       AAABR(18)*(AAABR(13)**2*
     &           (1/2.D0*(Pair3*(pave43(dd2) + pave44(dd2))) + 
     &             1/4.D0*(Pair1*
     &                (-pave43(dd11) - pave44(dd11) - 
     &                  pave45(dd11) - pave46(dd11)))) + 
     &          1/16.D0*(Abb46*AAABR(19)**2*pave48(dd133)))) + 
     &    Pair2*(Pair5*(AAABR(18)*
     &           (1/2.D0*(la2*pave11(cc12)) + 
     &             1/4.D0*(la3*pave18(cc12))) - 
     &          5/8.D0*(AAABR(10)*AAABR(52)*pave18(cc12))) + 
     &       1/16.D0*(-(Pair7*AAABR(19)*AAABR(53)*pave23(cc12)) - 
     &          Pair6*AAABR(19)*AAABR(53)*pave28(cc12)) + 
     &       AAABR(18)*(1/4.D0*
     &           (AAABR(13)**2*
     &             (Pair6*(pave41(dd12) + pave42(dd12)) + 
     &               Pair7*(-pave41(dd13) - pave42(dd13)))) - 
     &          1/16.D0*(Pair6*(-MW2 + S)*AAABR(19)**2*pave48(dd3))))
     &      + AAABR(19)**2*
     &     (AAABR(10)*(1/16.D0*
     &           (-(Abb198*pave41(dd003)) - Abb203*pave41(dd222))-
     &            1/16.D0*(Abb199*pave41(dd333)) + 
     &          1/32.D0*(-(Abb193*pave43(dd123)) - 
     &             Abb136*pave45(dd111) - 
     &             Abb35*Pair1*pave45(dd122) - Abb138*pave45(dd222)
     &             ) - 1/32.D0*(Abb40*Pair7*pave45(dd223))) + 
     &       AAABR(18)*(-(1/32.D0*(Abb84*Pair3*pave47(dd122))) - 
     &          1/4.D0*((Pair1*Pair6 - Pair3*Pair7)*
     &             (pave48(dd002) + pave49(dd002))) + 
     &          1/16.D0*(-(Abb115*pave49(dd113)) - 
     &             Abb119*pave49(dd123) - 
     &             Abb21*Pair1*pave49(dd133) + 
     &             Abb120*(-pave48(dd233) - pave49(dd233)))))

        tmp1 = tmp1 + 1/32.D0*
     &     (-(Abb5*AAABR(10)*AAABR(52)*pave18(cc1)) - 
     &       Abb98*AAABR(19)*AAABR(53)*pave24(cc12) + 
     &       AAABR(19)*(AAABR(53)*
     &           (Abb104*pave29(cc1) - Pair1*Pair6*pave29(cc11) + 
     &             Pair3*Pair6*pave29(cc22)) + 
     &          AAABR(19)*(Abb111*AAABR(18)*pave47(dd003) + 
     &             Abb112*AAABR(18)*pave47(dd333))) + 
     &       AAABR(10)*AAABR(19)**2*
     &        (Abb66*Pair3*pave43(dd233) - Abb135*pave45(dd001) - 
     &          Abb127*pave50(cc1) - Abb177*pave50(cc2) - 
     &          Abb130*pave51(cc1) - Abb133*pave51(cc2)))

        tmp2 = EE*tmp1 + 
     &    AAABR(19)*(Pair6*
     &        (-(1/32.D0*(Pair3*AAABR(10)*AAABR(54)*pave38(cc22))) + 
     &          Pair1*(-(1/16.D0*(EE*AAABR(53)*pave28(cc22))) - 
     &             1/32.D0*(AAABR(18)*AAABR(54)*pave39(cc22))) + 
     &          1/16.D0*(EE*Sub57*pave41(dd12))) + 
     &       EE*(-(1/16.D0*(Pair7*Sub58*pave41(dd13))) + 
     &          1/16.D0*(Sub59*pave41(dd2) + Sub63*pave41(dd23) + 
     &             Sub61*pave41(dd3))) + 
     &       1/32.D0*(-(Pair1*Pair7*AAABR(10)*AAABR(54)*
     &             pave37(cc22)) - Sub66*AAABR(18)*pave39(cc2) - 
     &          Pair3*Pair7*AAABR(18)*AAABR(54)*pave40(cc22) + 
     &          (2*Sub52*AAABR(13) + Sub53*AAABR(19))*
     &           pave43(dd1) - Sub81*pave43(dd12) - 
     &          Sub70*pave43(dd13) - 
     &          (Sub50*AAABR(10) - 2*Sub51*AAABR(21))*
     &           pave43(dd2) - Sub79*pave43(dd22) - 
     &          (2*Sub48*AAABR(13) + Sub49*AAABR(19))*
     &           pave43(dd3) + Sub71*pave45(dd00) - 
     &          (2*Sub42*AAABR(13) + Sub43*AAABR(19))*
     &           pave45(dd1) + Sub73*pave45(dd11) - 
     &          Sub82*pave45(dd12) - Sub69*pave45(dd13) - 
     &          (Sub44*AAABR(10) - 2*Sub45*AAABR(21))*
     &           pave45(dd2) - Sub77*pave45(dd22) + 
     &          Sub78*pave45(dd23) + Sub75*pave45(dd33) - 
     &          Sub36*AAABR(18)*pave47(dd00) - 
     &          Pair1*Sub41*AAABR(18)*pave47(dd13) - 
     &          Sub87*AAABR(18)*pave47(dd2) + 
     &          Sub88*AAABR(18)*pave47(dd3)) - 
     &       1/32.D0*(Pair1*Sub37*AAABR(18)*pave47(dd33))) + 
     &    AAABR(19)**2*(AAABR(56)*
     &        (1/16.D0*(-(Pair4*pave32(cc00)) + 
     &             Pair3*Pair6*pave32(cc12) + 
     &             Pair1*(-(Pair6*pave32(cc11)) + 
     &                Pair7*pave32(cc12))) + 
     &          1/32.D0*(Abb93*pave32(cc1) + Abb94*pave32(cc2)) - 
     &          1/16.D0*(Pair3*Pair7*pave32(cc22))) + 
     &       1/32.D0*(-(Abb92*AAABR(49)*pave36(cc2)) + 
     &          Abb180*EE*AAABR(10)*pave43(dd111) + 
     &          Abb59*EE*Pair6*AAABR(10)*pave43(dd122) + 
     &          Abb64*EE*Pair3*AAABR(10)*pave43(dd223) + 
     &          Abb137*EE*AAABR(10)*pave45(dd002) + 
     &          Abb113*EE*AAABR(18)*pave47(dd001) - 
     &          Abb202*EE*AAABR(18)*pave47(dd002) + 
     &          Abb206*EE*AAABR(18)*pave47(dd112)) + 
     &       EE*(AAABR(10)*
     &           (-(1/16.D0*(Abb158*pave41(dd112))) - 
     &             1/32.D0*(Abb184*pave43(dd333)) + 
     &             1/32.D0*(-(Abb183*pave43(dd003)) - 
     &                Abb192*pave43(dd113) - 
     &                Abb182*pave43(dd222) - 
     &                Abb155*pave45(dd123) - 
     &                Abb154*pave45(dd133) - 
     &                Abb42*Pair7*pave45(dd233))) + 
     &          AAABR(18)*(1/32.D0*
     &              (-(Abb115*pave47(dd113)) - 
     &                Abb209*pave47(dd123) - 
     &                Abb21*Pair1*pave47(dd133) - 
     &                Abb89*Pair6*pave47(dd233)) + 
     &             1/16.D0*((Abb157 + MW2*Pair4)*pave48(dd00) + 
     &                Abb156*pave48(dd001) + 
     &                Abb161*pave48(dd123) - Abb117*pave49(dd12) + 
     &                Abb116*(-pave49(dd112) - pave49(dd122)) - 
     &                Abb118*pave49(dd13) + 
     &                Pair2*Pair5*
     &                 (-(S*pave48(dd2)) + 
     &                   S*
     &                    (-pave48(dd22) - pave49(dd2) - 
     &                      pave49(dd22))) + 
     &                Sub35*(-pave48(dd23) - pave49(dd23)) + 
     &                Pair5*
     &                 (Abb22*(-pave48(dd223) - pave49(dd223)) - 
     &                   Pair1*S*pave49(dd3)) + 
     &                Abb23*Pair1*pave49(dd33) + 
     &                MW2*(Pair2*Pair5*
     &                    (pave48(dd2) + pave48(dd22) + 
     &                      pave49(dd12) + pave49(dd2) + 
     &                      pave49(dd22)) + 
     &                   Pair5*
     &                    (Pair1*pave49(dd13) + Pair1*pave49(dd3))+
     &                     Pair1*Pair6*pave49(dd33))))))

        tmp2 = tmp2 + 1/16.D0*
     &     (-(Sub68*AAABR(10)*AAABR(19)*pave37(cc2)) - 
     &       Abb101*AAABR(10)*AAABR(19)*AAABR(54)*pave38(cc2) + 
     &       Abb200*EE*AAABR(10)*AAABR(19)**2*pave41(dd113) + 
     &       Abb73*EE*Pair6*AAABR(10)*AAABR(19)**2*pave41(dd122) + 
     &       Abb205*EE*AAABR(10)*AAABR(19)**2*pave41(dd123) + 
     &       Abb75*EE*Pair7*AAABR(10)*AAABR(19)**2*pave41(dd133) + 
     &       Abb78*EE*Pair3*AAABR(10)*AAABR(19)**2*pave41(dd223) + 
     &       Abb79*EE*Pair3*AAABR(10)*AAABR(19)**2*pave41(dd233) - 
     &       Abb160*EE*AAABR(18)*AAABR(19)**2*pave48(dd12) - 
     &       Abb159*EE*AAABR(18)*AAABR(19)**2*pave48(dd13) + 
     &       Abb47*EE*Pair6*AAABR(18)*AAABR(19)**2*pave48(dd33) + 
     &       Abb114*EE*AAABR(18)*AAABR(19)**2*pave49(dd00) + 
     &       EE*(Pair2*Pair5*AAABR(18)*AAABR(19)**2*
     &           (pave34(cc12) + pave34(cc2) + pave34(cc22) + 
     &             pave35(cc12) + pave35(cc2) + pave35(cc22)) + 
     &          MW2*(Pair2*
     &              (Pair5*AAABR(18)*AAABR(19)**2*pave48(dd12) + 
     &                Pair6*AAABR(18)*AAABR(19)**2*pave48(dd13)) + 
     &             Pair1*Pair6*AAABR(18)*AAABR(19)**2*
     &              pave48(dd33) + 
     &             Pair4*AAABR(18)*AAABR(19)**2*pave49(dd00))) + 
     &       Abb113*EE*AAABR(18)*AAABR(19)**2*pave49(dd001) + 
     &       Abb111*EE*AAABR(18)*AAABR(19)**2*
     &        (pave48(dd003) + pave49(dd003)) + 
     &       Abb112*EE*AAABR(18)*AAABR(19)**2*
     &        (pave48(dd333) + pave49(dd333))) + 
     &    1/32.D0*(Sub85*pave18(cc0) + 
     &       AAABR(53)*((Pair4*Sub27 - Abb96*EE*AAABR(19))*
     &           pave24(cc0) - 
     &          EE*Pair3*Pair7*AAABR(19)*pave24(cc11) + 
     &          (Pair4*Sub27 - Abb103*EE*AAABR(19))*pave29(cc0) + 
     &          Abb105*EE*AAABR(19)*pave29(cc12)) - 
     &       (Abb95 - 2*MHC2*Pair4)*AAABR(19)**2*AAABR(56)*
     &        pave32(cc0) + Sub55*AAABR(54)*pave37(cc0) + 
     &       Sub67*AAABR(10)*AAABR(19)*pave37(cc1) + 
     &       Pair1*Pair6*AAABR(10)*AAABR(19)*AAABR(54)*
     &        pave37(cc11) - 
     &       Abb109*AAABR(10)*AAABR(19)*AAABR(54)*pave37(cc12) + 
     &       Sub54*AAABR(54)*pave38(cc0) - 
     &       Abb100*AAABR(10)*AAABR(19)*AAABR(54)*pave38(cc1) + 
     &       Pair3*Pair7*AAABR(10)*AAABR(19)*AAABR(54)*
     &        pave38(cc11) + 
     &       Abb102*AAABR(10)*AAABR(19)*AAABR(54)*pave38(cc12) - 
     &       Pair1*Pair5*AAABR(18)*AAABR(19)*AAABR(54)*
     &        pave39(cc12) - 
     &       Pair3*Pair5*AAABR(18)*AAABR(19)*AAABR(54)*
     &        pave40(cc12) + 
     &       Pair3*Pair7*AAABR(18)*AAABR(19)*AAABR(54)*
     &        pave40(cc2) - Sub65*pave43(dd0) + 
     &       Sub72*AAABR(19)*pave43(dd00) + 
     &       EE*(-(Abb7*AAABR(10)*AAABR(52)*pave18(cc2)) + 
     &          Abb97*AAABR(19)*AAABR(53)*pave24(cc1) + 
     &          Pair1*Pair7*AAABR(19)*AAABR(53)*pave24(cc22) - 
     &          Pair4*AAABR(19)*AAABR(53)*
     &           (pave24(cc00) + pave29(cc00)) + 
     &          Abb179*AAABR(10)*AAABR(19)**2*pave43(dd001)) + 
     &       Abb181*EE*AAABR(10)*AAABR(19)**2*pave43(dd002) + 
     &       Sub74*AAABR(19)*pave43(dd11) + 
     &       Abb194*EE*AAABR(10)*AAABR(19)**2*pave43(dd133) + 
     &       Sub80*AAABR(19)*pave43(dd23) + 
     &       Sub76*AAABR(19)*pave43(dd33) - Sub64*pave45(dd0) + 
     &       Abb139*EE*AAABR(10)*AAABR(19)**2*pave45(dd003) + 
     &       Abb33*EE*Pair1*AAABR(10)*AAABR(19)**2*pave45(dd112) + 
     &       Abb153*EE*AAABR(10)*AAABR(19)**2*pave45(dd113) + 
     &       AAABR(19)*(2*Sub46*AAABR(13) + Sub47*AAABR(19))*
     &        pave45(dd3) + 
     &       Abb140*EE*AAABR(10)*AAABR(19)**2*pave45(dd333) + 
     &       Pair3*Sub38*AAABR(18)*AAABR(19)*pave47(dd12) + 
     &       Pair3*Sub39*AAABR(18)*AAABR(19)*pave47(dd22) + 
     &       Abb203*EE*AAABR(18)*AAABR(19)**2*pave47(dd222) + 
     &       Sub40*AAABR(18)*AAABR(19)*pave47(dd23) - 
     &       Sub84*AAABR(19)*pave50(cc0) - 
     &       Sub83*AAABR(19)*pave51(cc0) + 
     &       EE*Pair4*AAABR(10)*AAABR(19)**2*
     &        (pave50(cc00) + pave51(cc00)) + 
     &       EE*Pair2*Pair5*AAABR(10)*AAABR(19)**2*
     &        (pave50(cc12) + pave50(cc22) + pave51(cc12) + 
     &          pave51(cc22)))

        Cloop(1) = Cloop(1) + 1/Pi**2*tmp2 + 
     &    Pair4*(-(1/8.D0*Sub89) + 
     &       1/Pi**2*(AAABR(49)*
     &           (1/16.D0*(la3*pave2(bb0)) + 
     &             1/8.D0*(la2*pave1(bb0) + 
     &                AAABR(13)**2*(pave32(cc0) + pave33(cc0)))) + 
     &          1/16.D0*(Sub34*pave2(bb0) + 
     &             EE*AAABR(18)*AAABR(19)**2*
     &              (pave34(cc00) + pave35(cc00))) + 
     &          1/32.D0*(-(AAABR(19)**2*AAABR(49)*pave1(bb0)) - 
     &             EE*AAABR(10)*AAABR(19)**2*
     &              (pave16(bb0) + pave17(bb0)) - 
     &             (-(Sub33*AAABR(19)) - AAABR(53)*AAABR(54))*
     &              (pave26(bb0) + pave30(bb0)) + 
     &             (-MW2 + S)*AAABR(19)**2*AAABR(49)*pave36(cc0) + 
     &             AAABR(10)*AAABR(19)*AAABR(54)*
     &              (pave37(cc00) + pave38(cc00)) - 
     &             AAABR(18)*AAABR(19)*AAABR(54)*
     &              (pave39(cc00) + pave40(cc00))) + 
     &          EE*(-(1/16.D0*
     &                (AAABR(19)*AAABR(53)*
     &                  (pave23(cc00) + pave28(cc00)))) + 
     &             1/4.D0*(AAABR(18)*
     &                (-(la3*pave18(cc00)) + 
     &                  AAABR(13)**2*
     &                   (-pave41(dd00) - pave42(dd00) - 
     &                     pave43(dd00) - pave44(dd00) - 
     &                     pave45(dd00) - pave46(dd00)))))))

#ifdef DEBUG
	DEB("box: Cloop(1) =", Cloop(1))
#endif

	end
