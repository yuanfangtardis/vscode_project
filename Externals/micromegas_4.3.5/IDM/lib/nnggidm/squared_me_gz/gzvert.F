#if 0
* vert.F
* form factors for {S[6], S[6]} -> {V[1], V[2]}
* generated by FormCalc 8.0 on 19-Apr-2016 22:32
#endif

#include "vars.h"


	subroutine gzvert
	implicit none

#include "vars.h"


#include "inline.h"

        Cloop(1) = Cloop(1) + 
     &    (Pair1*Pair7*(1/2.D0*(dZZA*AAABR(20)**2) + 
     &          1/Pi**2*(AAABR(20)*
     &             (EE*AAABR(19)**2*
     &                (1/16.D0*
     &                   ((MHC2 + T)*pave23(cc2) - 
     &                     MHX2*pave23(cc22) - T*pave23(cc22)) + 
     &                  1/8.D0*
     &                   (-pave23(cc00) - pave24(cc00) - 
     &                     MHX2*pave24(cc12) - T*pave24(cc12))) + 
     &               AAABR(19)*
     &                (1/16.D0*
     &                   ((Sub8 - 2*EE*MHX2*AAABR(19))*pave24(cc0))
     &                    - 1/32.D0*(AAABR(54)*pave25(bb1)) + 
     &                  1/32.D0*
     &                   (AAABR(54)*pave25(bb0) + 
     &                     (4*EE*AAABR(19) + AAABR(54))*
     &                      pave26(bb0) + 
     &                     (2*EE*AAABR(19) - AAABR(54))*pave26(bb1)
     &                     ))))) + 
     &       1/Pi**2*(AAABR(20)*
     &          (AAABR(19)*
     &             (1/32.D0*(Sub17*pave24(cc1)) - 
     &               1/32.D0*(Sub18*pave24(cc2))) + 
     &            EE*(AAABR(19)**2*
     &                (1/16.D0*(Abb2*Pair7*pave23(cc12)) + 
     &                  1/32.D0*
     &                   (-(Abb16*pave24(cc11)) - 
     &                     Abb18*pave24(cc22))) + 
     &               Pair1*Pair7*AAABR(12)*AAABR(13)*
     &                (-(1/4.D0*pave23(cc2)) + 1/4.D0*pave27(cc2))))))/
     &     (-MH32 + T) + (Pair3*Pair6*
     &        (1/2.D0*(dZZA*AAABR(20)**2) + 
     &          1/Pi**2*(AAABR(20)*
     &             (EE*AAABR(19)**2*
     &                (1/16.D0*
     &                   ((MHC2 + U)*pave28(cc2) - 
     &                     MHX2*pave28(cc22) - U*pave28(cc22)) + 
     &                  1/8.D0*
     &                   (-pave28(cc00) - pave29(cc00) - 
     &                     MHX2*pave29(cc12) - U*pave29(cc12))) + 
     &               AAABR(19)*
     &                (-(1/32.D0*(AAABR(54)*pave25(bb1))) + 
     &                  1/16.D0*
     &                   ((Sub8 - 2*EE*MHX2*AAABR(19))*pave29(cc0))
     &                    + 1/32.D0*
     &                   (AAABR(54)*pave25(bb0) + 
     &                     (4*EE*AAABR(19) + AAABR(54))*
     &                      pave30(bb0) + 
     &                     (2*EE*AAABR(19) - AAABR(54))*pave30(bb1)
     &                     ))))) + 
     &       1/Pi**2*(AAABR(20)*
     &          (AAABR(19)*
     &             (1/32.D0*(Sub15*pave29(cc1)) - 
     &               1/32.D0*(Sub16*pave29(cc2))) + 
     &            EE*(AAABR(19)**2*
     &                (1/16.D0*(Abb1*Pair6*pave28(cc12)) + 
     &                  1/32.D0*
     &                   (-(Abb12*pave29(cc11)) - 
     &                     Abb14*pave29(cc22))) + 
     &               Pair3*Pair6*AAABR(12)*AAABR(13)*
     &                (-(1/4.D0*pave28(cc2)) + 1/4.D0*pave31(cc2))))))/
     &     (-MH32 + U)

        Cloop(1) = Cloop(1) + 
     &    (AAABR(17)*(Pair4*
     &          (-(1/2.D0*Sub19) + 
     &            1/Pi**2*(AAABR(49)*
     &                (1/4.D0*(AAABR(15)*pave1(bb0)) + 
     &                  1/16.D0*(AAABR(11)*pave2(bb0))) + 
     &               1/8.D0*(AAABR(5)*AAABR(53)*pave16(bb0) + 
     &                  AAABR(21)*AAABR(54)*pave17(bb0) + 
     &                  (Sub4*AAABR(10) - Sub5*AAABR(19))*
     &                   pave18(cc00) + Sub6*pave2(bb0)) + 
     &               EE*(1/2.D0*
     &                   (Mm*AAABR(34)*(AAABR(18) + 2*AAABR(40))*
     &                     pave12(cc00)) + 
     &                  (4*AAABR(40) + AAABR(42))*
     &                   (-(1/12.D0*(Mc*AAABR(26)*pave13(bb0))) + 
     &                     1/3.D0*
     &                      (Mqu*AAABR(38)*pave14(cc00) + 
     &                       Mt*AAABR(37)*pave15(cc00))) + 
     &                  1/8.D0*
     &                   (-(Ml*AAABR(32)*(AAABR(18) + 2*AAABR(40))*
     &                       pave3(bb0)) - 
     &                     Mm*AAABR(34)*(AAABR(18) + 2*AAABR(40))*
     &                      pave4(bb0)) + 
     &                  1/12.D0*
     &                   (-(Mqu*AAABR(38)*
     &                       (4*AAABR(40) + AAABR(42))*pave5(bb0))-
     &                       Mt*AAABR(37)*
     &                      (4*AAABR(40) + AAABR(42))*pave6(bb0))+
     &                    (AAABR(39) - 2*AAABR(40))*
     &                   (-(1/6.D0*(Mb*AAABR(23)*pave10(cc00))) + 
     &                     1/24.D0*
     &                      (Mb*AAABR(23)*pave7(bb0) + 
     &                       Mqd*AAABR(29)*pave8(bb0) + 
     &                       Ms*AAABR(36)*pave9(bb0))) - 
     &                  AAABR(15)*AAABR(18)*pave11(cc00)))) + 
     &         1/Pi**2*(1/8.D0*
     &             (Sub14*pave18(cc0) - Sub10*pave18(cc1) - 
     &               Pair2*Pair5*(Sub4*AAABR(10) - Sub5*AAABR(19))*
     &                pave18(cc12)) - 1/8.D0*(Sub12*pave18(cc2)) + 
     &            EE*((Abb3 + Abb4)*
     &                (-(1/48.D0*
     &                     (Mt*AAABR(37)*(4*AAABR(40) + AAABR(42))*
     &                       pave15(cc0))) + 
     &                  1/32.D0*
     &                   (-(Mm*AAABR(34)*(AAABR(18) + 2*AAABR(40))*
     &                       pave12(cc0)) - 
     &                     Ml*AAABR(32)*(AAABR(18) + 2*AAABR(40))*
     &                      pave19(cc0)) + 
     &                  1/48.D0*
     &                   (-(Mqu*AAABR(38)*
     &                       (4*AAABR(40) + AAABR(42))*pave14(cc0))
     &                       - Mc*AAABR(26)*
     &                      (4*AAABR(40) + AAABR(42))*pave20(cc0))+
     &                    1/96.D0*
     &                   ((AAABR(39) - 2*AAABR(40))*
     &                     (Mb*AAABR(23)*pave10(cc0) + 
     &                       Mqd*AAABR(29)*pave21(cc0) + 
     &                       Ms*AAABR(36)*pave22(cc0)))) + 
     &               Pair4*
     &                (-(1/4.D0*
     &                     (AAABR(11)*AAABR(18)*pave18(cc00))) + 
     &                  1/2.D0*
     &                   (Ml*AAABR(32)*(AAABR(18) + 2*AAABR(40))*
     &                     pave19(cc00)) + 
     &                  1/3.D0*
     &                   (Mc*AAABR(26)*(4*AAABR(40) + AAABR(42))*
     &                     pave20(cc00)) + 
     &                  1/6.D0*
     &                   (-(Mqd*AAABR(29)*
     &                       (AAABR(39) - 2*AAABR(40))*pave21(cc00)
     &                       ) - 
     &                     Ms*AAABR(36)*(AAABR(39) - 2*AAABR(40))*
     &                      pave22(cc00))) + 
     &               Pair2*Pair5*
     &                (-(1/3.D0*
     &                     (Mt*AAABR(37)*(4*AAABR(40) + AAABR(42))*
     &                       pave15(cc12))) + 
     &                  1/2.D0*
     &                   (-(Mm*AAABR(34)*(AAABR(18) + 2*AAABR(40))*
     &                       pave12(cc12)) - 
     &                     Ml*AAABR(32)*(AAABR(18) + 2*AAABR(40))*
     &                      pave19(cc12)) + 
     &                  1/3.D0*
     &                   (-(Mqu*AAABR(38)*
     &                       (4*AAABR(40) + AAABR(42))*pave14(cc12)
     &                       ) - 
     &                     Mc*AAABR(26)*(4*AAABR(40) + AAABR(42))*
     &                      pave20(cc12)) + 
     &                  1/6.D0*
     &                   ((AAABR(39) - 2*AAABR(40))*
     &                     (Mb*AAABR(23)*pave10(cc12) + 
     &                       Mqd*AAABR(29)*pave21(cc12) + 
     &                       Ms*AAABR(36)*pave22(cc12))) + 
     &                  AAABR(18)*
     &                   (1/4.D0*(AAABR(11)*pave18(cc12)) + 
     &                     AAABR(15)*pave11(cc12)))))))/(-Mh2 + S + (0D0,1D0)*Mh*wh )

#ifdef DEBUG
	DEB("vert: Cloop(1) =", Cloop(1))
#endif

	end
