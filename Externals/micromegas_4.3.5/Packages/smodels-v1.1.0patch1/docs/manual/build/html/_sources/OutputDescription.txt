.. index:: Output Description

.. |invisible compression| replace:: :ref:`invisible compression <invComp>`
.. |mass compression| replace:: :ref:`mass compression <massComp>`
.. |element| replace:: :ref:`element <element>`
.. |elements| replace:: :ref:`elements <element>`
.. |topology| replace:: :ref:`topology <topology>`
.. |topologies| replace:: :ref:`topologies <topology>`
.. |decomposition| replace:: :doc:`decomposition <Decomposition>`
.. |theory predictions| replace:: :doc:`theory predictions <TheoryPredictions>`
.. |theory prediction| replace:: :doc:`theory prediction <TheoryPredictions>`
.. |constraint| replace:: :ref:`constraint <ULconstraint>`
.. |constraints| replace:: :ref:`constraints <ULconstraint>`
.. |runSModelS| replace:: :ref:`runSModelS.py <runSModelS>`
.. |database| replace:: :ref:`database <Database>`
.. |output| replace:: :ref:`output <smodelsOutput>`
.. |results| replace:: :ref:`experimental results <ExpResult>`
.. |txnames| replace:: :ref:`txnames <TxName>`
.. |EM| replace:: :ref:`EM-type <EMtype>`
.. |UL| replace:: :ref:`UL-type <ULtype>`
.. |EMr| replace:: :ref:`EM-type result <EMtype>`
.. |ULr| replace:: :ref:`UL-type result <ULtype>`
.. |EMrs| replace:: :ref:`EM-type results <EMtype>`
.. |ULrs| replace:: :ref:`UL-type results <ULtype>`
.. |ExpRes| replace:: :ref:`Experimental Result<ExpResult>`
.. |ExpRess| replace:: :ref:`Experimental Results<ExpResult>`
.. |expres| replace:: :ref:`experimental result<ExpResult>`
.. |express| replace:: :ref:`experimental results<ExpResult>`
.. |Dataset| replace:: :ref:`DataSet<DataSet>`
.. |Datasets| replace:: :ref:`DataSets<DataSet>`
.. |dataset| replace:: :ref:`data set<DataSet>`
.. |datasets| replace:: :ref:`data sets<DataSet>`
.. |parameters| replace:: :ref:`parameters file <parameterFile>`
.. |ssigBRe| replace:: :math:`\sum \sigma \times BR \times \epsilon`

.. _outputDescription:

Output Description
==================

A detailed description of the possible output formats generated
by :ref:`running SModelS <runningSModelS>` and their content is given below.
For simplicity we will assume that all printer options
in the |parameters| are set to True, so the output information is maximal.

.. _screenOut:

Screen (Stdout) Output
----------------------

The stdout (or :ref:`log output <logOut>`) is intended to provide extensive information about
the |database|, the |decomposition|, the  |theory predictions| and the :ref:`missing topologies <topCoverage>`.
It is most convenient if the input is a single file and not a folder, since the output is quite extensive.
If all the options in **stdout-printer** are set to True (see |parameters|), the screen output contains the following information:

* information about the basic input parameters and the status of the run:

.. literalinclude:: /images/screenoutput.txt
   :lines: 1-8

* a list of all the |express| considered (if **printDatabase** = True). Note that this list corresponds to all the results
  selected in the **database** options (see |parameters|). If **addAnaInfo** = True,
  for each |expres| entry a list of all the simplified models (or |elements|) constrained by the analysis
  is also shown using the :ref:`bracket notation <bracketNotation>`:

.. literalinclude:: /images/screenoutput.txt
   :lines: 10-22,742-750    

  
* a full list of the |topologies| generated by the |decomposition| (if **printDecomp** = True). Each |topology| entry
  contains basic information about the |topology| as well as the number of |elements| with this |topology|
  and the sum over all the |elements| weights. If **addElementInfo** = True, the |elements| belonging to each
  |topology| are also explicitly shown, as well as the |element|'s mass, :ref:`final states <final states>`,
  weight, the PIDs of the :ref:`intermediate particles <odd states>` contributing to the |element| and the element ID:

.. literalinclude:: /images/screenoutput.txt
   :lines: 939-984
   

* a list of all the |theory predictions| obtained and the corresponding |expres| upper limit.
  For each |expres|, the corresponding *id*, signal region (|dataset|) and *sqrts* as well as
  the constrained simplified models (|txnames|) are printed.
  After this basic information, the signal cross section (|theory prediction|),
  the list of :ref:`condition values <ULconditions>`  (if applicable) and the corresponding observed
  upper limit are shown. Also, if available, the expected upper limit is included.
  If  **computeStatistics** = True, the :math:`\chi^2` and likelihood values are printed 
  (see :ref:`likelihood calculation <likelihoodCalc>`).
  Finally, if **printExtendedResults** = True, basic information about the |elements|
  being constrained, such as their masses, IDs and PIDs, is also shown.
  
.. literalinclude:: /images/screenoutput.txt
   :lines: 17901-17937

* summary information about the :ref:`missing topologies <topCoverage>`, if **testCoverage** = True. 
  The total missing topology cross section
  corresponds to the sum of cross sections of all |elements| which are not tested by any |expres|.
  If, however, the |element| is constrained by one or more |express|, but its mass is outside the
  efficiency or upper limit grids (see |EMrs| and |ULrs|), its cross section is included in the 
  total cross section outside the grid. Finally, the |elements| which contribute to the 
  total missing topology cross section are subdivided into |elements| with
  long decays or with asymmetric branches (see :ref:`coverage tool <topCoverage>` for more details)

.. literalinclude:: /images/screenoutput.txt
   :lines: 18283-18287
       

* detailed information about the missing topologies with highest cross sections.
  The |element| cross section (weight) as well as its description in :ref:`bracket notation <bracketNotation>`
  is included. If **addCoverageID** = True, all the |elements| IDs contributing to the missing topology are shown.
  These IDs can be traced back to the corresponding |elements| using the |decomposition| information
  obtained with **printDecomp** = True and **addElementInfo** = True.

.. literalinclude:: /images/screenoutput.txt
   :lines: 18289-18293 
   
* detailed information about the topologies which are outside the  |express| grid.
  If **addCoverageID** = True, all the |elements| IDs contributing to the missing topology are shown.

.. literalinclude:: /images/screenoutput.txt
   :lines: 18312-18316  
   
* information about the missing topologies with long cascade decays.
  The long cascade decays are classified by the initially produced mother particles.
  If more than one pair of mothers are contributing to the same class of elements, the full list is given in the comment.
  For definiteness all lists are sorted.
  If **addCoverageID** = True, all the |elements| IDs contributing to the missing topology are shown.

.. literalinclude:: /images/screenoutput.txt
   :lines: 18323-18327,18344-18345   

* information about the missing topologies with asymmetric decays.
  The asymmetric branch decays are classified by the initially produced mother particles.
  If more than one pair of mothers are contributing to the same class of elements, the full list is given in the comment.
  For definiteness all lists are sorted.
  If **addCoverageID** = True, all the |elements| IDs contributing to the missing topology are shown.

.. literalinclude:: /images/screenoutput.txt
   :lines: 18346-18350    

   

.. _logOut:

Log Output
----------

The log-type output is identical to the :ref:`screen output <screenOut>`, except that it is
redirected to a .log file. The filename is set as the <input file>.log and stored in the output folder
(see the :ref:`runSModelS options <runSModelS>`).

   

.. _fileOut:

Summary File Output
-------------------

The summary-type output is similar to the :ref:`screen output <screenOut>`, but restricted
to the list of |theory predictions| and model :ref:`coverage <topCoverage>`. 
The output is printed to the file <input file>.smodels and stored in the output folder
(see the :ref:`runSModelS options <runSModelS>`).

Below we describe in detail the blocks contained in the summary output:

* information about the basic input parameters and the status of the run::

.. literalinclude:: /images/summaryoutput.txt
   :lines: 1-8
   
* a list of all the |theory predictions| obtained and the corresponding |expres| upper limit.
  If **expandedSummary** = False only the most constraining |expres| is printed.
  For each |theory prediction| entry, the corresponding |expres| *id*, the signal region (|dataset|) used (only for |EMrs|) 
  and the |expres| *sqrts* is printed. Furthermore, the |txnames| contributing to the signal cross section, the
  theory cross section (*Theory_Value*), the observed upper limit (*Exp_limit*), 
  the (theory cross section)/(observed upper limit) ratio (*r*) and, when available,
  the (theory cross section)/(expected upper limit) ratio (*r_expect*) are also printed.
  For |ULrs| the condition violation (see :ref:`upper limit conditions <ULconditions>`) is also included.
  Finally, if  **computeStatistics** = True, the :math:`\chi^2` and likelihood values (for |EMrs|) are printed:

.. literalinclude:: /images/summaryoutput.txt
   :lines: 10-25

* the maximum value for the (theory cross section)/(observed upper limit) ratio. If this value is
  higher than *1* the input model is likely excluded by one of the |express| (see :ref:`confronting predictions <confrontPredictions>`)
 
.. literalinclude:: /images/summaryoutput.txt
   :lines: 117-118

* summary information about the :ref:`missing topologies <topCoverage>`, if **testCoverage** = True. 
  The total missing topology cross section
  corresponds to the sum of all |elements| cross sections which are not tested by any |expres|.
  If, however, the |element| is constrained by one or more |express|, but its mass is outside the
  efficiency or upper limit grids (see |EMrs| and |ULrs|), its cross section is included in the 
  total cross section outside the grid. Finally, the |elements| which contribute to the 
  total missing topology cross section are subdivided into |elements| with
  long decays or with asymmetric branches (see :ref:`coverage tool <topCoverage>` for more details)

.. literalinclude:: /images/summaryoutput.txt
   :lines: 120-123
       

* detailed information about the missing topologies with highest cross sections.
  The |element| cross section (weight) as well as its description in :ref:`bracket notation <bracketNotation>`
  is included.

.. literalinclude:: /images/summaryoutput.txt
   :lines: 126-130 
   
* detailed information about the topologies which are outside the  |express| grid:

.. literalinclude:: /images/summaryoutput.txt
   :lines: 139-143
   
* information about the missing topologies with long cascade decays:

.. literalinclude:: /images/summaryoutput.txt
   :lines: 146-150,158

* information about the missing topologies with asymmetric decays:

.. literalinclude:: /images/summaryoutput.txt
   :lines: 159-163


.. _pyOut:

Python Output
-------------

The Python-type output is similar to the :ref:`screen output <screenOut>`, however
converted to a Python dictionary. If all options are set to True,
it includes information about the |decomposition|, the list of |theory predictions| and model :ref:`coverage <topCoverage>`. 
The output is printed to the file <input file>.py and stored in the output folder
(see the :ref:`runSModelS options <runSModelS>`).

Below we describe in detail the dictionary keys and values contained in the Python dictionary output:

* information about the basic input parameters and the status of the run stored under the *OutputStatus* key:

.. literalinclude:: /images/pythonoutput.txt
   :lines: 1-2

  
* a full list of the |elements| generated by the |decomposition| (if **addElementList** = True) stored
  under the *Element* key. Each list entry contains basic information about the |elements|. 
  The list can be considerably long, so it is recommended to
  set **addElementList** to False, unless the |decomposition| information is required by the user.

.. literalinclude:: /images/pythonoutput.txt
   :lines: 3-4
   

* a list of all the |theory predictions| obtained for the |express|, stored under the *ExptRes* key.
  For each list entry, the corresponding result *id*, the |expres| type (if |ULr| or |EMr|), 
  the signal region (|dataset| ID), the *sqrts* and luminosity, the constrained simplified models (|txnames|),
  the signal cross section (theory prediction), the corresponding observed
  upper limit and the maximum condition violation (see :ref:`upper limit conditions <ULconditions>`) are shown.
  Furthermore, the masses of the |elements| contributing to the signal cross section and the :math:`\chi^2` and
  likelihood values (if **computeStatistics** = True) are also included.
  
.. literalinclude:: /images/pythonoutput.txt
   :lines: 5-11

* a list of missing topologies (if **testCoverage** = True), stored under the *Missed Topologies* key.
  For each list entry, the |element| cross section (weight), the |element| IDs contributing to the topology and the |element|
  description in :ref:`bracket notation <bracketNotation>` is included.

.. literalinclude:: /images/pythonoutput.txt
   :lines: 12-13
   
* a list of topologies which are outside the  |express| grid (if **testCoverage** = True),
  stored under the *Outside Grid* key.
  For each list entry, the |element| cross section (weight)
  and the |element| description in :ref:`bracket notation <bracketNotation>` is included.

.. literalinclude:: /images/pythonoutput.txt
   :lines: 14  
   
* a list of topologies with long cascade decays (if **testCoverage** = True),
  stored under the *Long Cascades* key.
  For each list entry, the |element| cross section (weight) and the PIDs of the mothers are included.
  The mother PIDs are given in a nested list, as more than one pair might contribute to the same class of |elements|.

.. literalinclude:: /images/pythonoutput.txt
   :lines: 15  
  
* a list of topologies with asymmetric branch decays (if **testCoverage** = True),
  stored under the *Asymmetric Branches* key.
  For each list entry, the |element| cross section (weight) and the PIDs of the mothers are included.
  The mother PIDs are given in a nested list, as more than one pair might contribute to the same class of |elements|.

.. literalinclude:: /images/pythonoutput.txt
   :lines: 16


.. _xmlOut:

XML Output
----------

The xml-type output is identical to the :ref:`python output <pyOut>`, however
converted to a xml format. The output is printed to the file <input file>.xml and stored in the output folder
(see the :ref:`runSModelS options <runSModelS>`).

Since the output information and options are the same as described for :ref:`python output <pyOut>`,
we simply show below an excerpt of the xml file to illustrate the output format:

.. literalinclude:: /images/xmloutput.txt
   :language: xml
   :lines: 1-2,85,300-328,45077,45078-45104

