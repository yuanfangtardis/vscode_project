#Database address
[path]
databasePath = ../smodels-database ; Give path to the database directory or to the binary database file

#Select running mode
[options]
inputType = SLHA ;SLHA for a SLHA input file or LHE for a LHE input file
checkInput = True ;Set True to check the input file for possible errors 
doInvisible = True ;Set True if invisible compression should be performed, False elsewise
doCompress = True ;Set True if mass compression should be performed, False elsewise
testCoverage = True ;Set True if topologies not covered by experiments (missing topologies) should be identified, False otherwise

#Select input parameters
[parameters]
sigmacut = 0.03 ;Give minimum cross section value [fb] considered in SLHA decomposition (relevant for SLHA decomposition and detection of missing topologies)
minmassgap = 5. ;Give minimum mass gap [GeV] for mass compression
maxcond = 0.2 ;Maximum relative violation of conditions for valid results
ncpus = 1 ;Give number of cores used when running in parallel (integer, -1 means all available CPUs are used)

#Select database analyses
[database]
analyses = all ;Set all to use all analyses included in the database
#to use only specific analyses, give a list of the names separated by comma **without blank spaces**:
#analyses = CMS-PAS-SUS-13-008,CMS-SUS-13-013,ATLAS-CONF-2013-024,ATLAS-SUSY-2013-04

txnames= all ;Set all to use all constraints included in the database
#to use only specific constraints, give a list of the names separated by comma **without blank spaces**:
#txnames = T2,T1,TChiWZ

dataselector= all ; Set all to use all upper limit and efficiency maps results in the database. Set to upperLimit (efficiencyMap) to use only UL (EM) results:
#dataselector = upperLimit
#It can also be used to select specific datasets (signal regions) from efficiency map results. For the latter provide a list of the desired dataset ids **without blank spaces**:
#dataselector = SRA mCT150,SRA mCT200

#database information printout options
printDatabase = True ;Set True to print the used list of experimental results to stdout, False elsewise
addAnaInfo = True ;Set True to add information about each experimental result used, False elsewise

#Settings for result printout
[printer]
outputType = summary,stdout,python ;Define the output formats
#available output formats: summary, stdout, log, python, xml (type log redirects stdout in *.log output file)

#options for stdout and log format
[stdout-printer]
printDecomp = True ;Set True to print a table of topologies after decomposition, False elsewise
addElmentInfo = True ;Set True to add a list of elements, False elsewise. Note that not all the elements appearing in this table are constrained by experiments.
printExtendedResults = True ;Set True to print comprehensive table of results, False to print only result summary

#options for summary file
[summary-printer]
expandedSummary = True ;Set True to print to file all applicable analyses, False for only the strongest result

#options for python printer
[python-printer]
addElementList = False ;Set True to print full list of elements to python and xml format, False elsewise. Note that these are all elements after decomposition and the list can be very long.

#options for xml printer
[xml-printer]
addElementList = False ;Set True to print full list of elements to python and xml format, False elsewise. Note that these are all elements after decomposition and the list can be very long.

